Index: app/src/main/java/com/example/pinatlas/Creation_View.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pinatlas\n\nimport android.app.DatePickerDialog\nimport android.content.Context\nimport android.icu.util.Calendar\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.text.Editable\nimport android.text.TextWatcher\nimport android.view.View\nimport com.example.pinatlas.constants.Constants\nimport com.example.pinatlas.model.Trip\nimport com.google.android.libraries.places.api.Places\nimport com.google.android.libraries.places.widget.AutocompleteSupportFragment\nimport com.google.firebase.Timestamp\nimport com.google.firebase.auth.FirebaseAuth\nimport com.google.firebase.auth.FirebaseUser\nimport com.google.firebase.firestore.DocumentReference\nimport com.google.firebase.firestore.FirebaseFirestore\nimport java.util.*\nimport com.google.android.libraries.places.widget.listener.PlaceSelectionListener\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport android.widget.*\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.example.pinatlas.adapter.ActivityListAdapter\nimport com.google.android.gms.common.api.Status\nimport com.google.android.libraries.places.api.model.Place\nimport com.google.firebase.firestore.Query\nimport com.takusemba.multisnaprecyclerview.MultiSnapRecyclerView\nimport kotlin.collections.ArrayList\n\n\nclass Creation_View : AppCompatActivity() {\n    private var TAG = Creation_View::class.java.simpleName\n    private lateinit var context: Context\n    private lateinit var picker: DatePickerDialog\n    private lateinit var startDateButton : Button\n    private lateinit var endDateButton : Button\n    private lateinit var tripName: EditText\n\n    private lateinit var tripID: String\n    private val mFirestore: FirebaseFirestore by lazy { FirebaseFirestore.getInstance() }\n    private val currentUser: FirebaseUser? by lazy { FirebaseAuth.getInstance().currentUser }\n    private var trip: Trip = Trip(user_id = currentUser!!.uid)\n    private lateinit var autocompleteFragment: AutocompleteSupportFragment\n    private lateinit var tripDocument: DocumentReference\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        setContentView(R.layout.activity_creation__view)\n\n        tripID = intent.getStringExtra(Constants.TRIP_ID.type)\n        trip.trip_id = tripID\n        tripDocument = mFirestore.collection(\"trips\").document(tripID)\n\n        context = this\n\n        startDateButton = findViewById(R.id.editStartDate)\n\n        // Set the endDateButton to the component\n        endDateButton = findViewById(R.id.endDateButton)\n        tripName = findViewById(R.id.tripName)\n        tripName.addTextChangedListener(object: TextWatcher {\n            override fun afterTextChanged(s: Editable?) {\n                trip.name = s.toString()\n                updateData()\n            }\n\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}\n\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}\n        })\n\n        Places.initialize(applicationContext, BuildConfig.PLACES_API_KEY)\n\n        autocompleteFragment = supportFragmentManager.findFragmentById(R.id.searchBar) as AutocompleteSupportFragment\n        autocompleteFragment.setPlaceFields(\n            listOf(\n                Place.Field.ID,\n                Place.Field.NAME,\n                Place.Field.ADDRESS,\n                Place.Field.PHONE_NUMBER,\n                Place.Field.RATING,\n                Place.Field.TYPES,\n                Place.Field.OPENING_HOURS,\n                Place.Field.LAT_LNG)\n        )\n        autocompleteFragment.setOnPlaceSelectedListener(object : PlaceSelectionListener {\n            override fun onError(status: Status) {\n                Log.e(TAG, \"An error occurred: $status\")\n            }\n\n            override fun onPlaceSelected(place: Place) {\n                trip.places.add(place)\n            }\n\n        })\n\n        val activityList: MultiSnapRecyclerView = findViewById(R.id.activityList)\n        val placeAdapter = ActivityListAdapter(trip.places)\n        val manager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false)\n\n        activityList.adapter = placeAdapter\n        activityList.layoutManager = manager\n\n    }\n\n    inner class onCreateDateSetListener: DatePickerDialog.OnDateSetListener {\n        // Create new variable in the onCreateDateSetListener to hold the button\n        private var datePicker: datePicker\n\n        // Create a constructor that takes the button and sets the classes button\n        constructor(datePicker: datePicker) {\n            this.datePicker = datePicker\n        }\n\n        override fun onDateSet(view: DatePicker, year: Int, month: Int, day: Int) {\n            // Now use the stored button instead\n            this.datePicker.button.setText( day.toString() + \"/\" + (month + 1).toString() + \"/\" + year.toString());\n            this.datePicker.setDate(Timestamp(Date(year, month, day)))\n        }\n    }\n\n    inner class startDatePicker: datePicker {\n        override var button: Button = startDateButton\n        override fun setDate(date: Timestamp) {\n            trip.start_date = date\n            updateData()\n        }\n\n        constructor()\n    }\n\n    inner class endDatePicker: datePicker {\n        override var button: Button = endDateButton\n        override fun setDate(date: Timestamp) {\n            trip.end_date = date\n            updateData()\n        }\n\n        constructor()\n    }\n\n    abstract class datePicker {\n        abstract var button: Button\n        abstract fun setDate(date: Timestamp)\n    }\n\n    // Switch createDatePicker to accept a button\n    fun createDatePicker(datePickerParam: datePicker) {\n        val c = Calendar.getInstance()\n        picker = DatePickerDialog(context, onCreateDateSetListener(datePickerParam), c.get(Calendar.YEAR), c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH))\n        picker.show()\n    }\n\n    // Change the components onClick to createStartDatePicker or endDatePicker\n    fun createStartDatePicker(view : View) {\n        createDatePicker(startDatePicker())\n    }\n\n    fun createEndDatePicker(view : View) {\n        createDatePicker(endDatePicker())\n    }\n\n    fun updateData() {\n        tripDocument.set(trip)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pinatlas/Creation_View.kt	(date 1581909063000)
+++ app/src/main/java/com/example/pinatlas/Creation_View.kt	(date 1581986116000)
@@ -20,17 +20,12 @@
 import java.util.*
 import com.google.android.libraries.places.widget.listener.PlaceSelectionListener
 import android.util.Log
-import android.view.LayoutInflater
-import android.view.ViewGroup
 import android.widget.*
 import androidx.recyclerview.widget.LinearLayoutManager
-import androidx.recyclerview.widget.RecyclerView
 import com.example.pinatlas.adapter.ActivityListAdapter
 import com.google.android.gms.common.api.Status
 import com.google.android.libraries.places.api.model.Place
-import com.google.firebase.firestore.Query
 import com.takusemba.multisnaprecyclerview.MultiSnapRecyclerView
-import kotlin.collections.ArrayList
 
 
 class Creation_View : AppCompatActivity() {
@@ -96,8 +91,8 @@
 
             override fun onPlaceSelected(place: Place) {
                 trip.places.add(place)
+                updateData()
             }
-
         })
 
         val activityList: MultiSnapRecyclerView = findViewById(R.id.activityList)
